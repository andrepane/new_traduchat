rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funciones auxiliares
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUserInChat(chatData) {
      return isAuthenticated() && 
             chatData.participants.hasAny([request.auth.uid]);
    }

    // Reglas para la colección users
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if false; // No permitir eliminación de usuarios
    }

    // Reglas para la colección chats
    match /chats/{chatId} {
      allow create: if isAuthenticated();
      allow read: if isAuthenticated() && 
                    (resource == null || 
                     resource.data.participants.hasAny([request.auth.uid]));
      allow update: if isAuthenticated() && 
                     resource.data.participants.hasAny([request.auth.uid]);
      allow delete: if false; // No permitir eliminación de chats
      
      // Reglas para mensajes dentro de chats
      match /messages/{messageId} {
        allow read: if isAuthenticated() && 
                     get(/databases/$(database)/documents/chats/$(chatId))
                     .data.participants.hasAny([request.auth.uid]);
        allow create: if isAuthenticated() && 
                     get(/databases/$(database)/documents/chats/$(chatId))
                     .data.participants.hasAny([request.auth.uid]);
        allow update, delete: if false; // No permitir modificación o eliminación de mensajes
      }
    }
  }
} 
