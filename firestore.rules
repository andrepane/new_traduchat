rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Funciones auxiliares
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUserInChat(chatData) {
      return isAuthenticated() && 
             (chatData.participants.hasAny([request.auth.uid]) || 
              request.auth.uid == chatData.createdBy);
    }

    // Reglas para la colección users
    match /users/{document=**} {
      allow read: if isAuthenticated();
      allow create, update: if isAuthenticated();
      allow delete: if false;
    }

    // Reglas para la colección chats
    match /chats/{chatId} {
      allow create: if isAuthenticated();
      allow read: if isAuthenticated();
      allow update: if isAuthenticated() &&
                    (resource == null || 
                     resource.data.participants.hasAny([request.auth.uid]));
      allow delete: if false;

      // Reglas para mensajes dentro de chats
      match /messages/{messageId} {
        allow read, create, update: if isAuthenticated() &&
                                     isUserInChat(get(/databases/$(database)/documents/chats/$(chatId)).data);
        allow delete: if false;
      }
    }
  }
}
