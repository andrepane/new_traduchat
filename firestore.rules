rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funciones auxiliares
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUserAuthenticated(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function hasValidPhone() {
      return request.auth.token.phone_number != null;
    }

    // Función para validar el formato de un mensaje
    function isValidMessage() {
      let message = request.resource.data;
      return message.keys().hasAll(['text', 'senderId', 'timestamp', 'language']) &&
        message.text is string &&
        message.text.size() > 0 &&
        message.text.size() < 1000 &&
        message.senderId == request.auth.uid &&
        message.timestamp is timestamp;
    }

    // Función para verificar si un usuario es participante de un chat
    function isParticipant(chatId) {
      let chat = get(/databases/$(database)/documents/chats/$(chatId));
      return chat != null && 
             chat.data.participants.hasAny([request.auth.uid]);
    }

    // Reglas para la colección de usuarios
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isUserAuthenticated(userId);
    }

    // Reglas para la colección de chats
    match /chats/{chatId} {
      // Permitir lectura si el usuario es participante
      allow read: if isAuthenticated() && isParticipant(chatId);
      
      // Permitir crear nuevos chats
      allow create: if isAuthenticated() && 
        request.resource.data.participants.hasAny([request.auth.uid]);
      
      // Permitir actualizar solo ciertos campos
      allow update: if isAuthenticated() && 
        isParticipant(chatId) &&
        request.resource.data.participants == resource.data.participants;

      // Reglas para la subcolección de mensajes
      match /messages/{messageId} {
        allow read: if isAuthenticated() && isParticipant(chatId);
        allow create: if isAuthenticated() && 
          isParticipant(chatId) &&
          isValidMessage();
        allow update: if false; // No permitir editar mensajes
        allow delete: if false; // No permitir eliminar mensajes
      }
    }
  }
} 
